<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-13T10:00:52 IST" name="Suite" finished-at="2025-04-13T10:01:09 IST" duration-ms="16210">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.RunnerClass@68e965f5]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-04-13T10:00:52 IST" name="Test" finished-at="2025-04-13T10:01:09 IST" duration-ms="16210">
      <class name="Runner.RunnerClass">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:00:52 IST" name="setUp" finished-at="2025-04-13T10:00:52 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:00:52 IST" name="setUpClass" finished-at="2025-04-13T10:00:53 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7b676112]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="openbrowser(java.lang.String)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:00:53 IST" name="openbrowser" finished-at="2025-04-13T10:00:58 IST" duration-ms="5689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:00:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-13T10:01:01 IST" duration-ms="2865" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Title of your scenario"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "java.sql.Connection.createStatement()" because "stepDefs.dashbordvalues.connection" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "java.sql.Connection.createStatement()" because "stepDefs.dashbordvalues.connection" is null
at stepDefs.dashbordvalues.getData(dashbordvalues.java:20)
at stepDefs.dashbordvalues.i_want_to_write_a_step_with_precondition(dashbordvalues.java:34)
at âœ½.I want to write a step with precondition(file:///C:/Shivam%20Work/Selenium%20CI/AutomationTestingDemo1/Featerfiles/EnterData.feature:8)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:01 IST" name="closebrowser" finished-at="2025-04-13T10:01:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="openbrowser(java.lang.String)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:01 IST" name="openbrowser" finished-at="2025-04-13T10:01:02 IST" duration-ms="726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-13T10:01:05 IST" duration-ms="2724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Title of your scenario outline"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:05 IST" name="closebrowser" finished-at="2025-04-13T10:01:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="openbrowser(java.lang.String)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:05 IST" name="openbrowser" finished-at="2025-04-13T10:01:05 IST" duration-ms="762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-13T10:01:09 IST" duration-ms="3101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Title of your scenario outline"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:09 IST" name="closebrowser" finished-at="2025-04-13T10:01:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:09 IST" name="tearDownClass" finished-at="2025-04-13T10:01:09 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Runner.RunnerClass@68e965f5]" started-at="2025-04-13T10:01:09 IST" name="tearDown" finished-at="2025-04-13T10:01:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Runner.RunnerClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
